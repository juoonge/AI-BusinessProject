▶ 7조 팀원 역할분담

  🧑‍💻 김준현 — 개발자
     • 기능 구현 
        - order
        - payment
     • 백오피스 기능 시연영상 녹화본

  🧑‍💻 김혜린 — 파트리더(팀리더)
     • 기능 구현: 
        - store
        - review
        - product
     • Git README.md 파일
     • 프로젝트 결과물 정리본

  🧑‍💻 박주원 — 아키텍트 리더
     • 기능 구현: 
        - user
        - address
        - category
        - gateway
     • Git 레포지토리 관리
     • 애플리케이션 배포 

  🧑‍💻 한수빈 — 개발자
     • 기능 구현: 
        - notice
        - complain
        - report
     • 팀 프로젝트 발표


▶ 서비스 구성 및 실행방법
     • 서비스 구조
        - Monolithic Application
        - Layered Architecture: Controller, Service, Repository 계층으로 구성
        - Entity 및 DTO: 각 기능별로 Entity와 DTO(Data Transfer Object)를 분리하여 관리
        - API 설계:** RESTful API 원칙에 따라 설계
        - Exception Handling:** 글로벌 예외 처리 (ExceptionHandler 사용)

     • 실행방법
        - AWS로 배포예정


▶ 프로젝트 목적/상세

  ⛳ 목적
     • 백엔드 기술자로서의 자질 키우기: 기획자, 웹디자이너,프론트 엔지니어의 기능/비기능 요구사항을 구체화 할 수 있다.
     • 팀 협업 능력 성장: 백엔드 개발 팀의 일원으로 팀원과 협업을 통해 통합된 어플리케이션을 개발할 수 있다.

  📄 상세
     • 광화문 근처에서 운영될 음식점들의 배달 및 포장 주문 관리, 결제, 그리고 주문 내역 관리 기능을 제공하는 주문 관리 플랫폼으로
       고객, 음식점, 관리자가 사용 가능한 통합 API 웹 서비스 시스템  
     • 운영 지역 초기에는 광화문 근처로 한정하여 운영하며, 향후 확장을 고려한 지역 분류 시스템 설계할 예정
        → 향후 확장성 가능: 지역별 필터링, 지역정보 수정 및 추가 등이 가능 하도록 고려

     • 세부 API
        - 음식점 분류
          ▪ 카테고리: 다음과 같은 음식점 카테고리로 분류
             예) 한식, 중식, 분식 
          ▪ 향후 확장성: 음식점 카테고리를 추가하거나 수정할 수 있도록 유연한 데이터 구조 설계

        - 결제 시스템
          ▪ 결제 방식: 카드 결제만 가능
          ▪ PG사 연동: PG사와의 결제 연동은 외주 개발로 진행하며, 결제 관련 내역만 플랫폼의 데이터베이스에 저장
          ▪ 결제 테이블: 결제 내역을 저장하기 위한 전용 테이블 설계

        - 주문 관리
          ▪ 주문 취소: 주문 생성 후 5분 이내에만 취소 가능하도록 제한
          ▪ 주문 유형: 온라인 주문과 대면 주문(가게에서 직접 주문) 모두 지원
          ▪ 대면 주문 처리: 가게 사장님이 직접 대면 주문을 접수

        - 데이터 보존 및 삭제 처리
          ▪ 데이터 보존: 모든 데이터는 완전 삭제되지 않고 숨김 처리로 관리
          ▪ 상품 숨김: 개별 상품도 숨김 처리 가능하도록 구현(숨김과 삭제는 다른 필드에서 동작해야함)
          ▪ 데이터 감사 로그: 모든 정보에 생성일, 생성 아이디, 수정일, 수정 아이디, 삭제일, 삭제 아이디를 포함

        - 접근 권한 관리
          ▪ 고객: 자신의 주문 내역만 조회 가능
          ▪ 가게 주인: 자신의 가게 주문 내역, 가게 정보, 주문 처리 및 메뉴 수정 가능
          ▪ 관리자: 모든 가게 및 주문에 대한 전체 권한 보유
        
        - 배송지 정보
          ▪ 필수 입력 사항: 주소지, ////요청 사항
          ▪ ‘주문’ 과 ‘배달’ 에 모두 관련된 정보


▶ ERD
 URL주소 ➡️ https://app.diagrams.net/?libs=general;uml#G1BsA1VnHmCgDWrpQlyPot0mUccoR7Ow2g#{"pageId"%3A"C5RBs43oDa-KdzZeNtuy"}


▶ 기술 스택
     • 백엔드: Spring Boot 3.3
     • 데이터베이스: PostgreSQL
     • 빌드 툴: Gradle
     • 버전 관리: Git을 이용한 버전 관리(GitHub)


// ▶ API docs
